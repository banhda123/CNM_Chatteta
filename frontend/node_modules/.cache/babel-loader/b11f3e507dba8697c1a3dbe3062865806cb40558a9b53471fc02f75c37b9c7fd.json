{"ast":null,"code":"var _jsxFileName = \"D:\\\\CNM\\\\CNM_Zalo_Nhom10\\\\frontend\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Drawer, List, ListItem, ListItemText, ListItemAvatar, Avatar, TextField, IconButton, Typography, Badge, Tabs, Tab, Button } from '@mui/material';\nimport { Send as SendIcon, AttachFile as AttachFileIcon, EmojiEmotions as EmojiIcon, Search as SearchIcon, Logout as LogoutIcon } from '@mui/icons-material';\nimport EmojiPicker from 'emoji-picker-react';\nimport io from 'socket.io-client';\nimport { userAPI, friendAPI, chatAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const navigate = useNavigate();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [friendRequests, setFriendRequests] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [activeTab, setActiveTab] = useState(0);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    const newSocket = io('http://localhost:5000', {\n      auth: {\n        token\n      }\n    });\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, [navigate]);\n  useEffect(() => {\n    if (socket) {\n      socket.on('message', message => {\n        setMessages(prev => [...prev, message]);\n      });\n      socket.on('friendRequest', request => {\n        setFriendRequests(prev => [...prev, request]);\n      });\n    }\n  }, [socket]);\n  useEffect(() => {\n    const fetchFriends = async () => {\n      try {\n        const response = await friendAPI.getFriends();\n        if (response.data && response.data.friends && Array.isArray(response.data.friends)) {\n          setFriends(response.data.friends);\n        } else {\n          console.error('Invalid friends data format:', response.data);\n          setFriends([]);\n        }\n      } catch (error) {\n        console.error('Error fetching friends:', error);\n        setFriends([]);\n      }\n    };\n    fetchFriends();\n  }, []);\n  useEffect(() => {\n    const fetchFriendRequests = async () => {\n      try {\n        const response = await friendAPI.getFriendRequests();\n        console.log('Friend requests:', response.data);\n        if (response.data && response.data.success) {\n          // Check if received is an object and convert it to an array\n          if (response.data.received) {\n            let receivedRequests = [];\n            if (Array.isArray(response.data.received)) {\n              receivedRequests = response.data.received;\n            } else if (typeof response.data.received === 'object') {\n              // Convert object to array of values\n              receivedRequests = Object.values(response.data.received);\n            } else {\n              console.error('Invalid friend requests format:', response.data);\n              setFriendRequests([]);\n              return;\n            }\n\n            // Process each request to ensure sender information is correctly structured\n            const processedRequests = receivedRequests.map(request => {\n              // If sender is a string/number (just the ID), convert it to a proper object\n              if (typeof request.sender_id !== 'undefined' && (typeof request.sender === 'undefined' || !request.sender)) {\n                return {\n                  ...request,\n                  _id: request.id || request._id,\n                  sender: {\n                    id: request.sender_id,\n                    fullname: request.username || request.fullname || 'Unknown User',\n                    avatar: request.avatar || ''\n                  }\n                };\n              }\n\n              // If the database returns sender_id and username/fullname at the root level\n              if (request.username || request.fullname) {\n                return {\n                  ...request,\n                  _id: request.id || request._id,\n                  sender: {\n                    id: request.sender_id,\n                    fullname: request.username || request.fullname,\n                    avatar: request.avatar || ''\n                  }\n                };\n              }\n              return request;\n            });\n            console.log('Processed friend requests:', processedRequests);\n            setFriendRequests(processedRequests);\n          } else {\n            setFriendRequests([]);\n          }\n        } else {\n          console.error('Failed to fetch friend requests:', response.data);\n          setFriendRequests([]);\n        }\n      } catch (error) {\n        console.error('Error fetching friend requests:', error);\n        // Even on error, ensure we set an empty array to prevent app from breaking\n        setFriendRequests([]);\n      }\n    };\n    if (socket) {\n      // Try to fetch friend requests, but don't let it break the app\n      fetchFriendRequests().catch(err => {\n        console.error('Fatal error fetching friend requests:', err);\n        setFriendRequests([]);\n      });\n\n      // Listen for new friend requests\n      socket.on('friendRequest', request => {\n        console.log('New friend request received:', request);\n\n        // Process the request to ensure sender information is correctly structured\n        let processedRequest = request;\n        if (typeof request.sender_id !== 'undefined' && (typeof request.sender === 'undefined' || !request.sender)) {\n          processedRequest = {\n            ...request,\n            _id: request.id || request._id,\n            sender: {\n              id: request.sender_id,\n              fullname: request.username || request.fullname || 'Unknown User',\n              avatar: request.avatar || ''\n            }\n          };\n        } else if (request.sender && typeof request.sender === 'object' && !request.sender.fullname && (request.username || request.fullname)) {\n          processedRequest = {\n            ...request,\n            _id: request.id || request._id,\n            sender: {\n              ...request.sender,\n              id: request.sender.id || request.sender_id,\n              fullname: request.username || request.fullname || request.sender.username || 'Unknown User',\n              avatar: request.sender.avatar || request.avatar || ''\n            }\n          };\n        }\n        console.log('Processed new friend request:', processedRequest);\n        setFriendRequests(prev => [...prev, processedRequest]);\n      });\n      return () => {\n        socket.off('friendRequest');\n      };\n    }\n  }, [socket]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (messageInput.trim() && currentChat) {\n      socket.emit('message', {\n        to: currentChat._id,\n        content: messageInput\n      });\n      setMessageInput('');\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (file && currentChat) {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('to', currentChat._id);\n      try {\n        await chatAPI.uploadFile(formData);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n      }\n    }\n  };\n  const handleSearch = async () => {\n    try {\n      const response = await userAPI.searchUsers(searchQuery);\n      console.log('Search response:', response.data);\n      if (response.data && response.data.users) {\n        // Handle both single object and array cases\n        let users = [];\n        if (Array.isArray(response.data.users)) {\n          users = response.data.users;\n        } else if (typeof response.data.users === 'object' && response.data.users !== null) {\n          // If it's a single object, convert to array with one item\n          users = [response.data.users];\n        } else {\n          console.error('Invalid search results format:', response.data);\n          setSearchResults([]);\n          return;\n        }\n\n        // Get the current friend IDs\n        const friendIds = friends.map(friend => (friend === null || friend === void 0 ? void 0 : friend.id) || (friend === null || friend === void 0 ? void 0 : friend._id)).filter(Boolean);\n\n        // Get pending friend request IDs (both sent and received)\n        let pendingRequestIds = [];\n        let hasFriendRequestError = false;\n        try {\n          const requestsResponse = await friendAPI.getFriendRequests();\n          // Check if this is our fake success response from the error handler\n          if (requestsResponse.data && requestsResponse.data.success && Array.isArray(requestsResponse.data.received) && requestsResponse.data.received.length === 0 && Array.isArray(requestsResponse.data.sent) && requestsResponse.data.sent.length === 0) {\n            // This might be our fake response from the error handler\n            console.log('Using empty friend requests due to possible API error');\n            hasFriendRequestError = true;\n          } else if (requestsResponse.data && requestsResponse.data.success) {\n            // Add received request sender IDs\n            if (Array.isArray(requestsResponse.data.received)) {\n              pendingRequestIds = [...pendingRequestIds, ...requestsResponse.data.received.map(req => {\n                var _req$sender;\n                return req.sender_id || ((_req$sender = req.sender) === null || _req$sender === void 0 ? void 0 : _req$sender.id);\n              }).filter(Boolean)];\n            }\n\n            // Add sent request receiver IDs\n            if (Array.isArray(requestsResponse.data.sent)) {\n              pendingRequestIds = [...pendingRequestIds, ...requestsResponse.data.sent.map(req => {\n                var _req$receiver;\n                return req.receiver_id || ((_req$receiver = req.receiver) === null || _req$receiver === void 0 ? void 0 : _req$receiver.id);\n              }).filter(Boolean)];\n            }\n          }\n        } catch (error) {\n          console.error('Error fetching pending requests:', error);\n          hasFriendRequestError = true;\n        }\n\n        // Process users and mark those who are already friends or have pending requests\n        const processedUsers = users.map(user => {\n          const userId = parseInt(user.id, 10);\n          const isFriend = friendIds.includes(userId);\n\n          // If we had an error with friend requests, don't try to check pending status\n          const hasPendingRequest = hasFriendRequestError ? false : pendingRequestIds.length > 0 && pendingRequestIds.includes(userId);\n          return {\n            ...user,\n            id: userId,\n            isFriend,\n            hasPendingRequest\n          };\n        });\n        console.log('Processed users:', processedUsers);\n        setSearchResults(processedUsers);\n      } else {\n        console.error('Invalid search results format:', response.data);\n        setSearchResults([]);\n      }\n      setActiveTab(2);\n    } catch (error) {\n      console.error('Error searching users:', error);\n      setSearchResults([]);\n    }\n  };\n  const handleSendFriendRequest = async userId => {\n    try {\n      console.log('Sending friend request to user ID:', userId);\n      if (isNaN(userId)) {\n        console.error('User ID is not a valid number:', userId);\n        return;\n      }\n      const response = await friendAPI.sendFriendRequest(userId);\n      console.log('Friend request response:', response.data);\n\n      // Handle all success cases (both new request and auto-accept scenario)\n      if (response.data && response.data.success) {\n        setSearchResults(prev => prev.filter(u => u.id !== userId));\n        // If the request was auto-accepted, update the friends list\n        if (response.data.autoAccepted) {\n          // You might want to refresh the friends list here\n          const friendsResponse = await friendAPI.getFriends();\n          if (friendsResponse.data && friendsResponse.data.friends) {\n            setFriends(friendsResponse.data.friends);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n\n      // Handle different error scenarios\n      if (error.response) {\n        console.error('Server response:', error.response.data);\n\n        // If it's just a duplicate request message, we can still remove the user from search results\n        // as they're already handled (either as a pending request or friend)\n        if (error.response.status === 400 && error.response.data && error.response.data.message && error.response.data.message.includes('đã gửi lời mời')) {\n          setSearchResults(prev => prev.filter(u => u.id !== userId));\n        }\n      }\n    }\n  };\n  const handleAcceptFriendRequest = async requestId => {\n    try {\n      const response = await friendAPI.acceptFriendRequest(requestId);\n      console.log('Accept friend request response:', response.data);\n\n      // Remove the request from the list\n      setFriendRequests(prev => prev.filter(req => {\n        const id = req.id || req._id;\n        return id !== requestId;\n      }));\n\n      // Refresh the friends list to show the new friend\n      try {\n        const friendsResponse = await friendAPI.getFriends();\n        if (friendsResponse.data && friendsResponse.data.friends) {\n          setFriends(friendsResponse.data.friends);\n        }\n      } catch (error) {\n        console.error('Error refreshing friends list:', error);\n      }\n\n      // If we were on the friend requests tab, switch to friends tab if there are no more requests\n      if (activeTab === 1) {\n        const remainingRequests = friendRequests.filter(req => {\n          const id = req.id || req._id;\n          return id !== requestId;\n        });\n        if (remainingRequests.length === 0) {\n          setActiveTab(0); // Switch to Friends tab\n        }\n      }\n    } catch (error) {\n      console.error('Error accepting friend request:', error);\n    }\n  };\n  const handleRejectFriendRequest = async requestId => {\n    try {\n      const response = await friendAPI.rejectFriendRequest(requestId);\n      console.log('Reject friend request response:', response.data);\n\n      // Remove the request from the list\n      setFriendRequests(prev => prev.filter(req => {\n        const id = req.id || req._id;\n        return id !== requestId;\n      }));\n    } catch (error) {\n      console.error('Error rejecting friend request:', error);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n\n  // Refresh data when tab changes\n  useEffect(() => {\n    if (activeTab === 0) {\n      // Refresh friends list when viewing Friends tab\n      const refreshFriends = async () => {\n        try {\n          const response = await friendAPI.getFriends();\n          if (response.data && response.data.friends && Array.isArray(response.data.friends)) {\n            setFriends(response.data.friends);\n          }\n        } catch (error) {\n          console.error('Error refreshing friends list:', error);\n          // Don't update the friends list on error\n        }\n      };\n      refreshFriends().catch(err => {\n        console.error('Fatal error refreshing friends list:', err);\n      });\n    } else if (activeTab === 1) {\n      // Refresh friend requests when viewing Requests tab\n      const refreshFriendRequests = async () => {\n        try {\n          const response = await friendAPI.getFriendRequests();\n          if (response.data && response.data.success && response.data.received) {\n            // Process friend requests (using the same logic as in the other useEffect)\n            let receivedRequests = Array.isArray(response.data.received) ? response.data.received : Object.values(response.data.received);\n\n            // Process each request to ensure correct structure\n            const processedRequests = receivedRequests.map(request => {\n              if (typeof request.sender_id !== 'undefined' && !request.sender) {\n                return {\n                  ...request,\n                  _id: request.id || request._id,\n                  sender: {\n                    id: request.sender_id,\n                    fullname: request.username || request.fullname || 'Unknown User',\n                    avatar: request.avatar || ''\n                  }\n                };\n              }\n              return request;\n            });\n            setFriendRequests(processedRequests);\n          }\n        } catch (error) {\n          console.error('Error refreshing friend requests:', error);\n          // Don't change the friend requests list on error to preserve any existing data\n        }\n      };\n      refreshFriendRequests().catch(err => {\n        console.error('Fatal error refreshing friend requests:', err);\n      });\n    }\n  }, [activeTab]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: 300,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: 300,\n          boxSizing: 'border-box'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Zalo Clone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleLogout,\n            children: /*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            placeholder: \"T\\xECm ki\\u1EBFm...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            sx: {\n              flexGrow: 1,\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleSearch,\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onChange: (e, newValue) => setActiveTab(newValue),\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"B\\u1EA1n b\\xE8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"L\\u1EDDi m\\u1EDDi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"T\\xECm ki\\u1EBFm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [activeTab === 0 && friends.map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => (friend === null || friend === void 0 ? void 0 : friend._id) && setCurrentChat(friend),\n          selected: (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id) === (friend === null || friend === void 0 ? void 0 : friend._id),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              color: \"success\",\n              variant: \"dot\",\n              invisible: !(friend !== null && friend !== void 0 && friend.isOnline),\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: (friend === null || friend === void 0 ? void 0 : friend.avatar) || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: (friend === null || friend === void 0 ? void 0 : friend.fullname) || 'Unknown Friend',\n            secondary: friend !== null && friend !== void 0 && friend.isOnline ? 'Online' : 'Offline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this)]\n        }, (friend === null || friend === void 0 ? void 0 : friend._id) || `friend-${Math.random()}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this)), activeTab === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: friendRequests.length > 0 ? friendRequests.map(request => {\n            // Extract sender info from the request object\n            const requestId = request.id || request._id || `req-${Math.random()}`;\n            const sender = request.sender || {};\n            const senderId = sender.id || request.sender_id;\n            const senderName = sender.fullname || sender.username || 'Unknown User';\n            const senderAvatar = sender.avatar || '';\n            console.log('Rendering friend request:', request);\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: senderAvatar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: senderName,\n                secondary: \"\\u0110\\xE3 g\\u1EEDi l\\u1EDDi m\\u1EDDi k\\u1EBFt b\\u1EA1n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleAcceptFriendRequest(requestId),\n                children: \"Ch\\u1EA5p nh\\u1EADn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"outlined\",\n                color: \"secondary\",\n                onClick: () => handleRejectFriendRequest(requestId),\n                sx: {\n                  ml: 1\n                },\n                children: \"T\\u1EEB ch\\u1ED1i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 23\n              }, this)]\n            }, requestId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Kh\\xF4ng c\\xF3 l\\u1EDDi m\\u1EDDi k\\u1EBFt b\\u1EA1n\",\n              secondary: \"B\\u1EA1n ch\\u01B0a nh\\u1EADn \\u0111\\u01B0\\u1EE3c l\\u1EDDi m\\u1EDDi k\\u1EBFt b\\u1EA1n n\\xE0o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 17\n          }, this)\n        }, void 0, false), activeTab === 2 && searchResults.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: (user === null || user === void 0 ? void 0 : user.avatar) || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: (user === null || user === void 0 ? void 0 : user.fullname) || 'Unknown User',\n            secondary: user !== null && user !== void 0 && user.isFriend ? 'Đã là bạn bè' : user !== null && user !== void 0 && user.hasPendingRequest ? 'Đã gửi lời mời' : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this), user !== null && user !== void 0 && user.isFriend ? /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"outlined\",\n            disabled: true,\n            children: \"\\u0110\\xE3 l\\xE0 b\\u1EA1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 17\n          }, this) : user !== null && user !== void 0 && user.hasPendingRequest ? /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"outlined\",\n            disabled: true,\n            children: \"\\u0110\\xE3 g\\u1EEDi l\\u1EDDi m\\u1EDDi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"contained\",\n            onClick: () => handleSendFriendRequest(user === null || user === void 0 ? void 0 : user.id),\n            disabled: !(user !== null && user !== void 0 && user.id),\n            children: \"K\\u1EBFt b\\u1EA1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this)]\n        }, (user === null || user === void 0 ? void 0 : user.id) || `user-${Math.random()}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            borderBottom: 1,\n            borderColor: 'divider'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: currentChat.fullname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            overflow: 'auto',\n            p: 2\n          },\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: message.sender === currentChat._id ? 'flex-start' : 'flex-end',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: '70%',\n                p: 2,\n                borderRadius: 2,\n                bgcolor: message.sender === currentChat._id ? 'grey.100' : 'primary.main',\n                color: message.sender === currentChat._id ? 'text.primary' : 'white'\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            borderTop: 1,\n            borderColor: 'divider'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => setShowEmojiPicker(!showEmojiPicker),\n              children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"fileInput\",\n              style: {\n                display: 'none'\n              },\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fileInput\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                component: \"span\",\n                children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"outlined\",\n              placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n              value: messageInput,\n              onChange: e => setMessageInput(e.target.value),\n              onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n              sx: {\n                mx: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleSendMessage,\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 15\n          }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              bottom: 0,\n              right: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n              onEmojiClick: emojiObject => {\n                setMessageInput(prev => prev + emojiObject.emoji);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          children: \"Ch\\u1ECDn m\\u1ED9t cu\\u1ED9c tr\\xF2 chuy\\u1EC7n \\u0111\\u1EC3 b\\u1EAFt \\u0111\\u1EA7u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 490,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"R8QyKJYDXU1dUeFxf9BewOE4KgA=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Box","Drawer","List","ListItem","ListItemText","ListItemAvatar","Avatar","TextField","IconButton","Typography","Badge","Tabs","Tab","Button","Send","SendIcon","AttachFile","AttachFileIcon","EmojiEmotions","EmojiIcon","Search","SearchIcon","Logout","LogoutIcon","EmojiPicker","io","userAPI","friendAPI","chatAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","navigate","socket","setSocket","messages","setMessages","friends","setFriends","friendRequests","setFriendRequests","searchResults","setSearchResults","activeTab","setActiveTab","currentChat","setCurrentChat","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","searchQuery","setSearchQuery","messagesEndRef","token","localStorage","getItem","newSocket","auth","close","on","message","prev","request","fetchFriends","response","getFriends","data","Array","isArray","console","error","fetchFriendRequests","getFriendRequests","log","success","received","receivedRequests","Object","values","processedRequests","map","sender_id","sender","_id","id","fullname","username","avatar","catch","err","processedRequest","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","emit","to","content","handleFileUpload","event","file","target","files","formData","FormData","append","uploadFile","handleSearch","searchUsers","users","friendIds","friend","filter","Boolean","pendingRequestIds","hasFriendRequestError","requestsResponse","length","sent","req","_req$sender","_req$receiver","receiver_id","receiver","processedUsers","user","userId","parseInt","isFriend","includes","hasPendingRequest","handleSendFriendRequest","isNaN","sendFriendRequest","u","autoAccepted","friendsResponse","status","handleAcceptFriendRequest","requestId","acceptFriendRequest","remainingRequests","handleRejectFriendRequest","rejectFriendRequest","handleLogout","removeItem","refreshFriends","refreshFriendRequests","sx","display","height","children","variant","width","flexShrink","boxSizing","p","justifyContent","alignItems","mb","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","placeholder","value","onChange","e","flexGrow","mr","newValue","label","button","selected","color","invisible","isOnline","src","primary","secondary","Math","random","senderId","senderName","senderAvatar","ml","disabled","flexDirection","borderBottom","borderColor","overflow","index","maxWidth","borderRadius","bgcolor","ref","borderTop","type","style","htmlFor","component","fullWidth","onKeyPress","key","mx","position","bottom","right","onEmojiClick","emojiObject","emoji","_c","$RefreshReg$"],"sources":["D:/CNM/CNM_Zalo_Nhom10/frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  TextField,\n  IconButton,\n  Typography,\n  Badge,\n  Tabs,\n  Tab,\n  Button,\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  AttachFile as AttachFileIcon,\n  EmojiEmotions as EmojiIcon,\n  Search as SearchIcon,\n  Logout as LogoutIcon,\n} from '@mui/icons-material';\nimport EmojiPicker from 'emoji-picker-react';\nimport io from 'socket.io-client';\nimport { userAPI, friendAPI, chatAPI } from '../services/api';\n\nconst Chat = () => {\n  const navigate = useNavigate();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [friendRequests, setFriendRequests] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [activeTab, setActiveTab] = useState(0);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    const newSocket = io('http://localhost:5000', {\n      auth: { token },\n    });\n\n    setSocket(newSocket);\n\n    return () => newSocket.close();\n  }, [navigate]);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on('message', (message) => {\n        setMessages((prev) => [...prev, message]);\n      });\n\n      socket.on('friendRequest', (request) => {\n        setFriendRequests((prev) => [...prev, request]);\n      });\n    }\n  }, [socket]);\n\n  useEffect(() => {\n    const fetchFriends = async () => {\n      try {\n        const response = await friendAPI.getFriends();\n        if (response.data && response.data.friends && Array.isArray(response.data.friends)) {\n          setFriends(response.data.friends);\n        } else {\n          console.error('Invalid friends data format:', response.data);\n          setFriends([]);\n        }\n      } catch (error) {\n        console.error('Error fetching friends:', error);\n        setFriends([]);\n      }\n    };\n\n    fetchFriends();\n  }, []);\n\n  useEffect(() => {\n    const fetchFriendRequests = async () => {\n      try {\n        const response = await friendAPI.getFriendRequests();\n        console.log('Friend requests:', response.data);\n        if (response.data && response.data.success) {\n          // Check if received is an object and convert it to an array\n          if (response.data.received) {\n            let receivedRequests = [];\n            \n            if (Array.isArray(response.data.received)) {\n              receivedRequests = response.data.received;\n            } else if (typeof response.data.received === 'object') {\n              // Convert object to array of values\n              receivedRequests = Object.values(response.data.received);\n            } else {\n              console.error('Invalid friend requests format:', response.data);\n              setFriendRequests([]);\n              return;\n            }\n            \n            // Process each request to ensure sender information is correctly structured\n            const processedRequests = receivedRequests.map(request => {\n              // If sender is a string/number (just the ID), convert it to a proper object\n              if (typeof request.sender_id !== 'undefined' && (typeof request.sender === 'undefined' || !request.sender)) {\n                return {\n                  ...request,\n                  _id: request.id || request._id,\n                  sender: {\n                    id: request.sender_id,\n                    fullname: request.username || request.fullname || 'Unknown User',\n                    avatar: request.avatar || ''\n                  }\n                };\n              }\n              \n              // If the database returns sender_id and username/fullname at the root level\n              if (request.username || request.fullname) {\n                return {\n                  ...request,\n                  _id: request.id || request._id,\n                  sender: {\n                    id: request.sender_id,\n                    fullname: request.username || request.fullname,\n                    avatar: request.avatar || ''\n                  }\n                };\n              }\n              \n              return request;\n            });\n            \n            console.log('Processed friend requests:', processedRequests);\n            setFriendRequests(processedRequests);\n          } else {\n            setFriendRequests([]);\n          }\n        } else {\n          console.error('Failed to fetch friend requests:', response.data);\n          setFriendRequests([]);\n        }\n      } catch (error) {\n        console.error('Error fetching friend requests:', error);\n        // Even on error, ensure we set an empty array to prevent app from breaking\n        setFriendRequests([]);\n      }\n    };\n\n    if (socket) {\n      // Try to fetch friend requests, but don't let it break the app\n      fetchFriendRequests().catch(err => {\n        console.error('Fatal error fetching friend requests:', err);\n        setFriendRequests([]);\n      });\n\n      // Listen for new friend requests\n      socket.on('friendRequest', (request) => {\n        console.log('New friend request received:', request);\n        \n        // Process the request to ensure sender information is correctly structured\n        let processedRequest = request;\n        \n        if (typeof request.sender_id !== 'undefined' && (typeof request.sender === 'undefined' || !request.sender)) {\n          processedRequest = {\n            ...request,\n            _id: request.id || request._id,\n            sender: {\n              id: request.sender_id,\n              fullname: request.username || request.fullname || 'Unknown User',\n              avatar: request.avatar || ''\n            }\n          };\n        } else if (request.sender && typeof request.sender === 'object' && !request.sender.fullname && (request.username || request.fullname)) {\n          processedRequest = {\n            ...request,\n            _id: request.id || request._id,\n            sender: {\n              ...request.sender,\n              id: request.sender.id || request.sender_id,\n              fullname: request.username || request.fullname || request.sender.username || 'Unknown User',\n              avatar: request.sender.avatar || request.avatar || ''\n            }\n          };\n        }\n        \n        console.log('Processed new friend request:', processedRequest);\n        setFriendRequests((prev) => [...prev, processedRequest]);\n      });\n\n      return () => {\n        socket.off('friendRequest');\n      };\n    }\n  }, [socket]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSendMessage = () => {\n    if (messageInput.trim() && currentChat) {\n      socket.emit('message', {\n        to: currentChat._id,\n        content: messageInput,\n      });\n      setMessageInput('');\n    }\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (file && currentChat) {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('to', currentChat._id);\n\n      try {\n        await chatAPI.uploadFile(formData);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n      }\n    }\n  };\n\n  const handleSearch = async () => {\n    try {\n      const response = await userAPI.searchUsers(searchQuery);\n      console.log('Search response:', response.data);\n      \n      if (response.data && response.data.users) {\n        // Handle both single object and array cases\n        let users = [];\n        \n        if (Array.isArray(response.data.users)) {\n          users = response.data.users;\n        } else if (typeof response.data.users === 'object' && response.data.users !== null) {\n          // If it's a single object, convert to array with one item\n          users = [response.data.users];\n        } else {\n          console.error('Invalid search results format:', response.data);\n          setSearchResults([]);\n          return;\n        }\n        \n        // Get the current friend IDs\n        const friendIds = friends.map(friend => friend?.id || friend?._id).filter(Boolean);\n        \n        // Get pending friend request IDs (both sent and received)\n        let pendingRequestIds = [];\n        let hasFriendRequestError = false;\n        \n        try {\n          const requestsResponse = await friendAPI.getFriendRequests();\n          // Check if this is our fake success response from the error handler\n          if (requestsResponse.data && \n              requestsResponse.data.success && \n              Array.isArray(requestsResponse.data.received) && \n              requestsResponse.data.received.length === 0 && \n              Array.isArray(requestsResponse.data.sent) && \n              requestsResponse.data.sent.length === 0) {\n            // This might be our fake response from the error handler\n            console.log('Using empty friend requests due to possible API error');\n            hasFriendRequestError = true;\n          } else if (requestsResponse.data && requestsResponse.data.success) {\n            // Add received request sender IDs\n            if (Array.isArray(requestsResponse.data.received)) {\n              pendingRequestIds = [\n                ...pendingRequestIds,\n                ...requestsResponse.data.received.map(req => req.sender_id || req.sender?.id).filter(Boolean)\n              ];\n            }\n            \n            // Add sent request receiver IDs\n            if (Array.isArray(requestsResponse.data.sent)) {\n              pendingRequestIds = [\n                ...pendingRequestIds,\n                ...requestsResponse.data.sent.map(req => req.receiver_id || req.receiver?.id).filter(Boolean)\n              ];\n            }\n          }\n        } catch (error) {\n          console.error('Error fetching pending requests:', error);\n          hasFriendRequestError = true;\n        }\n        \n        // Process users and mark those who are already friends or have pending requests\n        const processedUsers = users.map(user => {\n          const userId = parseInt(user.id, 10);\n          const isFriend = friendIds.includes(userId);\n          \n          // If we had an error with friend requests, don't try to check pending status\n          const hasPendingRequest = hasFriendRequestError \n            ? false \n            : pendingRequestIds.length > 0 && pendingRequestIds.includes(userId);\n          \n          return {\n            ...user,\n            id: userId,\n            isFriend,\n            hasPendingRequest\n          };\n        });\n        \n        console.log('Processed users:', processedUsers);\n        setSearchResults(processedUsers);\n      } else {\n        console.error('Invalid search results format:', response.data);\n        setSearchResults([]);\n      }\n      \n      setActiveTab(2);\n    } catch (error) {\n      console.error('Error searching users:', error);\n      setSearchResults([]);\n    }\n  };\n\n  const handleSendFriendRequest = async (userId) => {\n    try {\n      console.log('Sending friend request to user ID:', userId);\n      \n      if (isNaN(userId)) {\n        console.error('User ID is not a valid number:', userId);\n        return;\n      }\n      \n      const response = await friendAPI.sendFriendRequest(userId);\n      console.log('Friend request response:', response.data);\n      \n      // Handle all success cases (both new request and auto-accept scenario)\n      if (response.data && response.data.success) {\n        setSearchResults((prev) => prev.filter((u) => u.id !== userId));\n        // If the request was auto-accepted, update the friends list\n        if (response.data.autoAccepted) {\n          // You might want to refresh the friends list here\n          const friendsResponse = await friendAPI.getFriends();\n          if (friendsResponse.data && friendsResponse.data.friends) {\n            setFriends(friendsResponse.data.friends);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n      \n      // Handle different error scenarios\n      if (error.response) {\n        console.error('Server response:', error.response.data);\n        \n        // If it's just a duplicate request message, we can still remove the user from search results\n        // as they're already handled (either as a pending request or friend)\n        if (error.response.status === 400 && \n            error.response.data && \n            error.response.data.message && \n            error.response.data.message.includes('đã gửi lời mời')) {\n          setSearchResults((prev) => prev.filter((u) => u.id !== userId));\n        }\n      }\n    }\n  };\n\n  const handleAcceptFriendRequest = async (requestId) => {\n    try {\n      const response = await friendAPI.acceptFriendRequest(requestId);\n      console.log('Accept friend request response:', response.data);\n      \n      // Remove the request from the list\n      setFriendRequests((prev) => prev.filter((req) => {\n        const id = req.id || req._id;\n        return id !== requestId;\n      }));\n      \n      // Refresh the friends list to show the new friend\n      try {\n        const friendsResponse = await friendAPI.getFriends();\n        if (friendsResponse.data && friendsResponse.data.friends) {\n          setFriends(friendsResponse.data.friends);\n        }\n      } catch (error) {\n        console.error('Error refreshing friends list:', error);\n      }\n      \n      // If we were on the friend requests tab, switch to friends tab if there are no more requests\n      if (activeTab === 1) {\n        const remainingRequests = friendRequests.filter(req => {\n          const id = req.id || req._id;\n          return id !== requestId;\n        });\n        \n        if (remainingRequests.length === 0) {\n          setActiveTab(0); // Switch to Friends tab\n        }\n      }\n    } catch (error) {\n      console.error('Error accepting friend request:', error);\n    }\n  };\n\n  const handleRejectFriendRequest = async (requestId) => {\n    try {\n      const response = await friendAPI.rejectFriendRequest(requestId);\n      console.log('Reject friend request response:', response.data);\n      \n      // Remove the request from the list\n      setFriendRequests((prev) => prev.filter((req) => {\n        const id = req.id || req._id;\n        return id !== requestId;\n      }));\n    } catch (error) {\n      console.error('Error rejecting friend request:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n\n  // Refresh data when tab changes\n  useEffect(() => {\n    if (activeTab === 0) {\n      // Refresh friends list when viewing Friends tab\n      const refreshFriends = async () => {\n        try {\n          const response = await friendAPI.getFriends();\n          if (response.data && response.data.friends && Array.isArray(response.data.friends)) {\n            setFriends(response.data.friends);\n          }\n        } catch (error) {\n          console.error('Error refreshing friends list:', error);\n          // Don't update the friends list on error\n        }\n      };\n      \n      refreshFriends().catch(err => {\n        console.error('Fatal error refreshing friends list:', err);\n      });\n    } else if (activeTab === 1) {\n      // Refresh friend requests when viewing Requests tab\n      const refreshFriendRequests = async () => {\n        try {\n          const response = await friendAPI.getFriendRequests();\n          if (response.data && response.data.success && response.data.received) {\n            // Process friend requests (using the same logic as in the other useEffect)\n            let receivedRequests = Array.isArray(response.data.received) \n              ? response.data.received \n              : Object.values(response.data.received);\n              \n            // Process each request to ensure correct structure\n            const processedRequests = receivedRequests.map(request => {\n              if (typeof request.sender_id !== 'undefined' && !request.sender) {\n                return {\n                  ...request,\n                  _id: request.id || request._id,\n                  sender: {\n                    id: request.sender_id,\n                    fullname: request.username || request.fullname || 'Unknown User',\n                    avatar: request.avatar || ''\n                  }\n                };\n              }\n              return request;\n            });\n            \n            setFriendRequests(processedRequests);\n          }\n        } catch (error) {\n          console.error('Error refreshing friend requests:', error);\n          // Don't change the friend requests list on error to preserve any existing data\n        }\n      };\n      \n      refreshFriendRequests().catch(err => {\n        console.error('Fatal error refreshing friend requests:', err);\n      });\n    }\n  }, [activeTab]);\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh' }}>\n      {/* Sidebar */}\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: 300,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: 300,\n            boxSizing: 'border-box',\n          },\n        }}\n      >\n        <Box sx={{ p: 2 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">Zalo Clone</Typography>\n            <IconButton onClick={handleLogout}>\n              <LogoutIcon />\n            </IconButton>\n          </Box>\n          <Box sx={{ display: 'flex', mb: 2 }}>\n            <TextField\n              size=\"small\"\n              placeholder=\"Tìm kiếm...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              sx={{ flexGrow: 1, mr: 1 }}\n            />\n            <IconButton onClick={handleSearch}>\n              <SearchIcon />\n            </IconButton>\n          </Box>\n          <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\n            <Tab label=\"Bạn bè\" />\n            <Tab label=\"Lời mời\" />\n            <Tab label=\"Tìm kiếm\" />\n          </Tabs>\n        </Box>\n        <List>\n          {activeTab === 0 && friends.map((friend) => (\n            <ListItem\n              key={friend?._id || `friend-${Math.random()}`}\n              button\n              onClick={() => friend?._id && setCurrentChat(friend)}\n              selected={currentChat?._id === friend?._id}\n            >\n              <ListItemAvatar>\n                <Badge\n                  color=\"success\"\n                  variant=\"dot\"\n                  invisible={!friend?.isOnline}\n                >\n                  <Avatar src={friend?.avatar || ''} />\n                </Badge>\n              </ListItemAvatar>\n              <ListItemText\n                primary={friend?.fullname || 'Unknown Friend'}\n                secondary={friend?.isOnline ? 'Online' : 'Offline'}\n              />\n            </ListItem>\n          ))}\n          {activeTab === 1 && (\n            <>\n              {friendRequests.length > 0 ? (\n                friendRequests.map((request) => {\n                  // Extract sender info from the request object\n                  const requestId = request.id || request._id || `req-${Math.random()}`;\n                  const sender = request.sender || {};\n                  const senderId = sender.id || request.sender_id;\n                  const senderName = sender.fullname || sender.username || 'Unknown User';\n                  const senderAvatar = sender.avatar || '';\n                  \n                  console.log('Rendering friend request:', request);\n                  \n                  return (\n                    <ListItem key={requestId}>\n                      <ListItemAvatar>\n                        <Avatar src={senderAvatar} />\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={senderName}\n                        secondary=\"Đã gửi lời mời kết bạn\"\n                      />\n                      <Button\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => handleAcceptFriendRequest(requestId)}\n                      >\n                        Chấp nhận\n                      </Button>\n                      <Button\n                        size=\"small\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={() => handleRejectFriendRequest(requestId)}\n                        sx={{ ml: 1 }}\n                      >\n                        Từ chối\n                      </Button>\n                    </ListItem>\n                  );\n                })\n              ) : (\n                <ListItem>\n                  <ListItemText \n                    primary=\"Không có lời mời kết bạn\" \n                    secondary=\"Bạn chưa nhận được lời mời kết bạn nào\"\n                  />\n                </ListItem>\n              )}\n            </>\n          )}\n          {activeTab === 2 && searchResults.map((user) => (\n            <ListItem key={user?.id || `user-${Math.random()}`}>\n              <ListItemAvatar>\n                <Avatar src={user?.avatar || ''} />\n              </ListItemAvatar>\n              <ListItemText \n                primary={user?.fullname || 'Unknown User'} \n                secondary={\n                  user?.isFriend ? 'Đã là bạn bè' : \n                  user?.hasPendingRequest ? 'Đã gửi lời mời' : \n                  null\n                }\n              />\n              {user?.isFriend ? (\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  disabled\n                >\n                  Đã là bạn\n                </Button>\n              ) : user?.hasPendingRequest ? (\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  disabled\n                >\n                  Đã gửi lời mời\n                </Button>\n              ) : (\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={() => handleSendFriendRequest(user?.id)}\n                  disabled={!user?.id}\n                >\n                  Kết bạn\n                </Button>\n              )}\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      {/* Main chat area */}\n      <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n        {currentChat ? (\n          <>\n            <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\n              <Typography variant=\"h6\">{currentChat.fullname}</Typography>\n            </Box>\n            <Box sx={{ flexGrow: 1, overflow: 'auto', p: 2 }}>\n              {messages.map((message, index) => (\n                <Box\n                  key={index}\n                  sx={{\n                    display: 'flex',\n                    justifyContent: message.sender === currentChat._id ? 'flex-start' : 'flex-end',\n                    mb: 2,\n                  }}\n                >\n                  <Box\n                    sx={{\n                      maxWidth: '70%',\n                      p: 2,\n                      borderRadius: 2,\n                      bgcolor: message.sender === currentChat._id ? 'grey.100' : 'primary.main',\n                      color: message.sender === currentChat._id ? 'text.primary' : 'white',\n                    }}\n                  >\n                    {message.content}\n                  </Box>\n                </Box>\n              ))}\n              <div ref={messagesEndRef} />\n            </Box>\n            <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <IconButton onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n                  <EmojiIcon />\n                </IconButton>\n                <input\n                  type=\"file\"\n                  id=\"fileInput\"\n                  style={{ display: 'none' }}\n                  onChange={handleFileUpload}\n                />\n                <label htmlFor=\"fileInput\">\n                  <IconButton component=\"span\">\n                    <AttachFileIcon />\n                  </IconButton>\n                </label>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  placeholder=\"Nhập tin nhắn...\"\n                  value={messageInput}\n                  onChange={(e) => setMessageInput(e.target.value)}\n                  onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                  sx={{ mx: 2 }}\n                />\n                <IconButton onClick={handleSendMessage}>\n                  <SendIcon />\n                </IconButton>\n              </Box>\n              {showEmojiPicker && (\n                <Box sx={{ position: 'absolute', bottom: 0, right: 0 }}>\n                  <EmojiPicker\n                    onEmojiClick={(emojiObject) => {\n                      setMessageInput((prev) => prev + emojiObject.emoji);\n                    }}\n                  />\n                </Box>\n              )}\n            </Box>\n          </>\n        ) : (\n          <Box\n            sx={{\n              flexGrow: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Typography variant=\"h6\" color=\"text.secondary\">\n              Chọn một cuộc trò chuyện để bắt đầu\n            </Typography>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}