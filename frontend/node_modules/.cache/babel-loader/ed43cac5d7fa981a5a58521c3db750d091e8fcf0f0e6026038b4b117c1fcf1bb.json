{"ast":null,"code":"import api from './api';\nconst login = async (username, password) => {\n  try {\n    console.log(`Đang gửi request đăng nhập với username: ${username}`);\n    const response = await api.post('/auth/login', {\n      username,\n      password\n    });\n    console.log('Phản hồi đăng nhập:', response);\n    if (response.success) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      return response;\n    } else {\n      throw new Error(response.message || 'Đăng nhập thất bại');\n    }\n  } catch (error) {\n    console.error('Login error:', error);\n    if (error.response) {\n      var _error$response$data;\n      console.error('Error response data:', error.response.data);\n      throw new Error(((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Lỗi đăng nhập');\n    }\n    throw error;\n  }\n};\nconst register = async userData => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    return response;\n  } catch (error) {\n    console.error('Register error:', error);\n    throw error;\n  }\n};\nconst logout = async () => {\n  try {\n    // Gọi API logout nếu cần\n    // Xóa dữ liệu local\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return true;\n  } catch (error) {\n    console.error('Logout error:', error);\n    throw error;\n  }\n};\nconst isAuthenticated = () => {\n  const token = localStorage.getItem('token');\n  return !!token;\n};\nconst getCurrentUser = () => {\n  const userStr = localStorage.getItem('user');\n  if (!userStr) return null;\n  try {\n    return JSON.parse(userStr);\n  } catch (error) {\n    console.error('Error parsing user data:', error);\n    return null;\n  }\n};\nexport const authService = {\n  login,\n  register,\n  logout,\n  isAuthenticated,\n  getCurrentUser\n};","map":{"version":3,"names":["api","login","username","password","console","log","response","post","success","localStorage","setItem","token","JSON","stringify","user","Error","message","error","_error$response$data","data","register","userData","logout","removeItem","isAuthenticated","getItem","getCurrentUser","userStr","parse","authService"],"sources":["D:/CNM/CNM_Zalo_Nhom10/frontend/src/services/auth.js"],"sourcesContent":["import api from './api';\r\n\r\nconst login = async (username, password) => {\r\n  try {\r\n    console.log(`Đang gửi request đăng nhập với username: ${username}`);\r\n    const response = await api.post('/auth/login', { username, password });\r\n    \r\n    console.log('Phản hồi đăng nhập:', response);\r\n    \r\n    if (response.success) {\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n      return response;\r\n    } else {\r\n      throw new Error(response.message || 'Đăng nhập thất bại');\r\n    }\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    \r\n    if (error.response) {\r\n      console.error('Error response data:', error.response.data);\r\n      throw new Error(error.response.data?.message || 'Lỗi đăng nhập');\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\nconst register = async (userData) => {\r\n  try {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Register error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst logout = async () => {\r\n  try {\r\n    // Gọi API logout nếu cần\r\n    // Xóa dữ liệu local\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Logout error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst isAuthenticated = () => {\r\n  const token = localStorage.getItem('token');\r\n  return !!token;\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  const userStr = localStorage.getItem('user');\r\n  if (!userStr) return null;\r\n  \r\n  try {\r\n    return JSON.parse(userStr);\r\n  } catch (error) {\r\n    console.error('Error parsing user data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const authService = {\r\n  login,\r\n  register,\r\n  logout,\r\n  isAuthenticated,\r\n  getCurrentUser\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC1C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,4CAA4CH,QAAQ,EAAE,CAAC;IACnE,MAAMI,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,aAAa,EAAE;MAAEL,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAEtEC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAAC;IAE5C,IAAIA,QAAQ,CAACE,OAAO,EAAE;MACpBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACK,KAAK,CAAC;MAC7CF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEE,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAC3D,OAAOR,QAAQ;IACjB,CAAC,MAAM;MACL,MAAM,IAAIS,KAAK,CAACT,QAAQ,CAACU,OAAO,IAAI,oBAAoB,CAAC;IAC3D;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IAEpC,IAAIA,KAAK,CAACX,QAAQ,EAAE;MAAA,IAAAY,oBAAA;MAClBd,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACX,QAAQ,CAACa,IAAI,CAAC;MAC1D,MAAM,IAAIJ,KAAK,CAAC,EAAAG,oBAAA,GAAAD,KAAK,CAACX,QAAQ,CAACa,IAAI,cAAAD,oBAAA,uBAAnBA,oBAAA,CAAqBF,OAAO,KAAI,eAAe,CAAC;IAClE;IAEA,MAAMC,KAAK;EACb;AACF,CAAC;AAED,MAAMG,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACnC,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,gBAAgB,EAAEc,QAAQ,CAAC;IAC3D,OAAOf,QAAQ;EACjB,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMK,MAAM,GAAG,MAAAA,CAAA,KAAY;EACzB,IAAI;IACF;IACA;IACAb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAChCd,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;IAC/B,OAAO,IAAI;EACb,CAAC,CAAC,OAAON,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMO,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMb,KAAK,GAAGF,YAAY,CAACgB,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO,CAAC,CAACd,KAAK;AAChB,CAAC;AAED,MAAMe,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,OAAO,GAAGlB,YAAY,CAACgB,OAAO,CAAC,MAAM,CAAC;EAC5C,IAAI,CAACE,OAAO,EAAE,OAAO,IAAI;EAEzB,IAAI;IACF,OAAOf,IAAI,CAACgB,KAAK,CAACD,OAAO,CAAC;EAC5B,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMY,WAAW,GAAG;EACzB5B,KAAK;EACLmB,QAAQ;EACRE,MAAM;EACNE,eAAe;EACfE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}